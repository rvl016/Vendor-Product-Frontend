{"version":3,"sources":["common/buttons.js","components/common/MenuBarView.js","components/common/ControlBarView.js","components/common/DeleteDialogView.js","common/general_helpers.js","common/forms.js","components/vendors/ModifyDialogView.js","components/vendors/CreateDialogView.js","components/vendors/table.js","common/search.js","common/request_helpers.js","components/VendorsView.js","components/vendor/ModifyDialogView.js","components/vendor/CreateDialogView.js","components/vendor/table.js","components/VendorView.js","styles/themes.js","App.js","serviceWorker.js","index.js"],"names":["ActionButton","props","Button","tag","disabled","edge","className","color","onClick","Typography","MenuBarView","state","view_name","this","setState","AppBar","position","Toolbar","variant","history","push","React","Component","withRouter","ControlBarView","toggle_create_dialog","toggle_create","toggle_delete_dialog","toggle_delete","toggle_modify_dialog","toggle_modify","number_selected","id","DeleteDialogView","on_submit","a","submit","response","status","on_toggle","console","log","open","Dialog","disableBackdropClick","onClose","DialogTitle","DialogContent","DialogActions","filter_null_and_blanks","data","Object","keys","reduce","acc","key","product_form","name","code","price","product_errors","error","message","__all__","ProductForm","index","TextField","defaultValue","default","errors","margin","label","type","required","onChange","on_change","helperText","vendor_form","cnpj","city","vendor_errors","VendorForm","ModifyDialogView","make_submition_data","vendor_id","set_errors","body","on_vendor_change","field","event","target","value","vendor_data","vendors_data","filter","vendor","selected","get_vendor_errors","hasOwnProperty","CreateDialogView","on_product_change","products_forms","on_new_product","concat","products_errors","products_number","get_products_errors","products","map","idx","length","TitledVendorForm","TitledProductForm","VendorsTableHead","TableHead","TableRow","hover","TableCell","padding","align","VendorsTableContent","rows_per_page","slice","current_page","style","cursor","role","aria-checked","tabIndex","Checkbox","checked","onCheck","inputProps","VendorsTable","TableContainer","Table","stickyHeader","aria-label","TableBody","Search","id_to_terms","terms","record","toString","toLowerCase","split","phrase","words","scores","calculate_score","sort","x","y","document_terms","search_terms","term","includes","API_BASE","VENDORS_URL","dummy","VENDOR_URL","VENDOR_PRODUCTS_URL","PRODUCTS_URL","PRODUCT_URL","product_id","create_request","method","headers","JSON","stringify","make_request_on_by_with","request_name","request_arguments","url","request","call_api","fetch","json","VendorsView","make_vendor","post_vendor_request","get_vendors","modify_vendor","put_vendor_request","remove_vendors","vendors_id","delete_vendors_request","vendors","clean_vendors","on_search","get_ordered_records","on_row_click","on_row_check","on_page_change","new_page","on_rows_per_page_change","parseInt","create_dialog_open","modify_dialog_open","delete_dialog_open","set_view_name","modify_dialog_opne","get_vendors_request","update_state_with","set_terms","updated_vendors","Paper","TablePagination","component","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","SelectProps","native","helper","product_data","products_data","product","current_product_form","copy_data_to_form","get_product_errors","ProductsForm","ProductsTableHead","ProductsTableContent","ProductsTable","VendorView","make_products","post_products_request","get_products","modify_product","put_product_request","remove_products","products_id","delete_products_request","clean_products","match","params","get_vendor","get_vendor_request","get_products_request","updated_products","mui_theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","red","green","App","backdrop_open","theme","exact","path","render","to","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.63f8096e.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nexport const ActionButton = props => (\n  <Button \n    tag = { props.tag }\n    disabled = { props.disabled }\n    edge = \"start\" \n    className = \"action-button\" \n    color = \"inherit\"\n    onClick = { props.onClick }\n  >\n    <Typography>{ props.tag }</Typography>\n  </Button>\n);\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport PropTypes from \"prop-types\";\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { ActionButton } from '../../common/buttons';\n\nimport './MenuBarView.scss';\n\nclass MenuBarView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.state = {\n      view_name: null\n    }\n  }\n\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  componentWillReceiveProps( props) {\n    const view_name = props.view_name;\n    this.setState( { view_name });\n  }\n\n  render() {\n    return (\n      <AppBar \n        position = \"sticky\" \n        color = \"primary\"\n        className = \"app-bar\" >\n        <Toolbar className = \"tool-bar\" variant = 'dense'>\n          <Typography variant = \"h6\">\n            { this.state.view_name }\n          </Typography>\n          <div className = \"app-bar-buttons\">\n            <div>\n              <ActionButton tag = \"All Vendors\" \n                onClick = { () => this.props.history.push( \"/vendors\") }\n                disabled = { this.state.view_name === \"Vendors View\" }\n              />\n            </div>\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  };\n};\n\nexport default withRouter( MenuBarView);\n","import React from 'react';\n\nimport { ActionButton } from '../../common/buttons';\n\nimport './ControlBarView.scss';\n\n\nclass ControlBarView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    \n    this.toggle_create_dialog = props.toggle_create ? \n      props.toggle_create : null;\n    this.toggle_delete_dialog = props.toggle_delete ? \n      props.toggle_delete : null;\n    this.toggle_modify_dialog = props.toggle_modify ? \n      props.toggle_modify : null;\n\n    this.state = {\n      number_selected: 0\n    }\n  }\n\n  componentWillReceiveProps( props) {\n    this.setState( { number_selected: props.number_selected });\n  }\n\n  render() {\n    return (\n      <div className = \"control-bar\" >\n        <div className = \"buttons\">\n          <div id = \"create-button\">\n            <ActionButton tag = \"New\"\n              onClick = { this.toggle_create_dialog }/>\n          </div>\n          <div id = \"modify-button\">\n            <ActionButton tag = \"Modify\"\n              disabled = { this.state.number_selected !== 1 }\n              onClick = { this.toggle_modify_dialog }/>\n          </div>\n          <div id = \"delete-button\">\n            <ActionButton tag = \"Delete\" \n              disabled = { this.state.number_selected === 0 }\n              onClick = { this.toggle_delete_dialog }/> \n          </div>\n        </div>\n        <div className = \"selected-div\">\n          <p className = \"selected-field\">\n            Selected: { this.state.number_selected }\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ControlBarView;\n\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';   \nimport DialogContent from '@material-ui/core/DialogContent'; \nimport DialogActions from '@material-ui/core/DialogActions'; \nimport Dialog from '@material-ui/core/Dialog'; \n\nimport './DeleteDialogView.scss';\n\n\nclass DeleteDialogView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.state = {\n      number_selected: this.props.number_selected,\n      open: this.props.open\n    }\n    this.on_toggle = props.on_toggle;\n    this.submit = props.on_submit;\n  }\n\n  componentWillReceiveProps( props) {\n    this.setState( { number_selected: props.number_selected, \n      open: props.open });\n  }\n\n  on_submit = async () => {\n    const response = await this.submit();\n    if (response.status === 200) return this.on_toggle();\n    console.log( \"DELETE request failed! Response:\");\n    console.log( response);\n  }\n\n  render() {\n    return (\n      <Dialog \n        disableBackdropClick \n        open = { this.state.open } \n        onClose = { this.on_toggle }>\n        <DialogTitle>Confirm Deletion</DialogTitle>\n        <DialogContent>  \n          <h4>Are you sure you want to delete { \n            this.state.number_selected } entries?</h4>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick = { this.on_toggle }>\n            Cancel\n          </Button>\n          <Button onClick = { this.on_submit }>\n            DELETE\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default DeleteDialogView;\n","\nexport const filter_null_and_blanks = data => \n  Object.keys( data).reduce( (acc, key) => ({\n    ...( data[key] !== null && data[key] !== \"\" && { [key]: data[key] }),\n    ...acc\n  }), {});","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\n// Product form ////////////////////////////////////////////////////////////////\nexport const product_form = {\n  name: \"\",\n  code: \"\",\n  price: null\n};\n\nexport const product_errors = {\n  name: {\n    error: false,\n    message: null\n  },\n  code: {\n    error: false,\n    message: null\n  },\n  price: {\n    error: false,\n    message: null\n  },\n  __all__: {\n    error: false,\n    message: null\n  }\n};\n\nexport const ProductForm = props => (\n  <div className = \"product-form form\" key = { props.index }>\n    <div>\n      <TextField\n        defaultValue = { props.default ? props.default.name : null }\n        error = { props.errors.name.error }\n        margin = 'none'\n        id = 'name'\n        label = 'Name'\n        type = 'name'\n        variant = 'filled'\n        required\n        onChange = { props.on_change( 'name') }\n        helperText = { props.errors.name.message }\n      />\n    </div>\n    <div>\n      <TextField\n        defaultValue = { props.default ? props.default.code : null }\n        error = { props.errors.code.error || props.errors.__all__.error }\n        margin = 'none'\n        id = 'username'\n        label = 'UPC-A code'\n        type = 'string'\n        variant = 'filled'\n        required\n        onChange = { props.on_change( 'code') }\n        helperText = { props.errors.code.message \n          || props.errors.__all__.message }\n      />\n    </div>\n    <div>\n      <TextField\n        defaultValue = { props.default ? props.default.price : null }\n        error = { props.errors.price.error }\n        margin = 'none'\n        id = 'price'\n        label = 'Price'\n        type = 'number'\n        variant = 'filled'\n        onChange = { props.on_change( 'price') }\n        helperText = { props.errors.price.message }\n      />\n    </div>\n  </div>\n)\n\n\n// Vendor form ////////////////////////////////////////////////////////////////\n\nexport const vendor_form = {\n  name: \"\",\n  cnpj: \"\",\n  city: \"\"\n};\n\nexport const vendor_errors = {\n  name: {\n    error: false,\n    message: null\n  },\n  cnpj: {\n    error: false,\n    message: null\n  },\n  city: {\n    error: false,\n    message: null\n  }\n};\n\n\nexport const VendorForm = props => (\n  <div className = \"vendor-form form\">\n    <div>\n      <TextField\n        defaultValue = { props.default ? props.default.name : null }\n        error = { props.errors.name.error }\n        margin = 'none'\n        id = 'name'\n        label = 'Name'\n        type = 'name'\n        variant = 'filled'\n        required\n        onChange = { props.on_change( 'name') }\n        helperText = { props.errors.name.message }\n      />\n    </div>\n    <div>\n      <TextField\n        defaultValue = { props.default ? props.default.cnpj : null }\n        error = { props.errors.cnpj.error }\n        margin = 'none'\n        id = 'username'\n        label = 'CNPJ'\n        type = 'string'\n        variant = 'filled'\n        required\n        onChange = { props.on_change( 'cnpj') }\n        helperText = { props.errors.cnpj.message }\n      />\n    </div>\n    <div>\n      <TextField\n        defaultValue = { props.default ? props.default.city : null }\n        error = { props.errors.city.error }\n        margin = 'none'\n        id = 'city'\n        label = 'City'\n        type = 'city'\n        variant = 'filled'\n        onChange = { props.on_change( 'city') }\n        helperText = { props.errors.city.message }\n      />\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';   \nimport DialogContent from '@material-ui/core/DialogContent'; \nimport DialogActions from '@material-ui/core/DialogActions'; \nimport Dialog from '@material-ui/core/Dialog'; \n\nimport { filter_null_and_blanks } from '../../common/general_helpers';\nimport { VendorForm, vendor_form, vendor_errors } from '../../common/forms';\n\nimport './ModifyDialogView.scss';\n\nclass ModifyDialogView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.state = {\n      open: this.props.open,\n      vendor_form: { ...vendor_form },\n      vendor_errors: { ...vendor_errors },\n      vendor_id: null\n    };\n    this.on_toggle = props.on_toggle;\n    this.submit = props.on_submit;\n  }\n\n  componentWillReceiveProps( props) {\n    const vendor_data = props.vendors_data.filter( vendor =>\n      props.selected[vendor.id])[0];\n    const vendor_id = vendor_data ? vendor_data.id : null;\n    this.setState( { open: props.open, vendor_id,\n      vendor_data: vendor_data, vendor_errors: { ...vendor_errors } });\n  }\n\n  on_submit = async () => {\n    const data = this.make_submition_data();\n    const response = await this.submit( data, this.state.vendor_id);\n    if (response.status === 200) return this.on_toggle();\n    this.set_errors( response.body.errors);\n  };\n\n  set_errors( errors) {\n    const vendor_errors = this.get_vendor_errors( errors);\n    this.setState( { vendor_errors }) \n  }\n\n  on_vendor_change = field => event => {\n    const vendor_form = this.state.vendor_form;\n    vendor_form[field] = event.target.value;\n    this.setState( { vendor_form })\n  };\n\n  render() {\n    if (! this.state.vendor_data)\n      return (<></>);\n    return (\n      <Dialog \n        disableBackdropClick \n        open = { this.state.open } \n        onClose = { this.on_toggle }>\n        <DialogTitle>\n          Modify { this.state.vendor_data.name } Vendor\n        </DialogTitle>\n        <DialogContent>\n          <form>\n            <VendorForm \n              on_change = { this.on_vendor_change }\n              errors = { this.state.vendor_errors }\n              default = { this.state.vendor_data }\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick = { this.on_toggle }>\n            Cancel\n          </Button>\n          <Button onClick = { this.on_submit }>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  get_vendor_errors( errors) {\n    return Object.keys( this.state.vendor_errors).reduce( (acc, key) => ({ \n      [key]: { \n        error: errors.hasOwnProperty( key), \n        message: errors[key] && errors[key][0]\n      }, \n      ...acc \n    }), {});\n  }\n\n  make_submition_data() {\n    const vendor = filter_null_and_blanks( this.state.vendor_form);\n    return { vendor };\n  }\n\n  filter_null_and_blanks( data) {\n    return Object.keys( data).reduce( (acc, key) => ({\n      ...( data[key] !== null && data[key] !== \"\" && { [key]: data[key] }),\n      ...acc\n    }), {});\n  }\n}\n\nexport default ModifyDialogView;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';   \nimport DialogContent from '@material-ui/core/DialogContent'; \nimport DialogActions from '@material-ui/core/DialogActions'; \nimport Dialog from '@material-ui/core/Dialog'; \nimport { Typography } from '@material-ui/core';\n\nimport { filter_null_and_blanks } from '../../common/general_helpers';\nimport { VendorForm, ProductForm, vendor_form, product_form, \n  vendor_errors, product_errors } from '../../common/forms';\n\nimport './CreateDialogView.scss';\n\nclass CreateDialogView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.state = {\n      open: this.props.open,\n      vendor_form: { ...vendor_form },\n      products_forms: [],\n      vendor_errors: { ...vendor_errors },\n      products_errors: []\n    };\n    this.products_number = 0;\n    this.on_toggle = props.on_toggle;\n    this.submit = props.on_submit;\n  }\n\n  componentWillReceiveProps( props) {\n    if (props.open)\n      this.setState( { vendor_errors: { ...vendor_errors },\n        vendor_form: { ...vendor_form }, products_forms: [],\n        products_errors: [] });\n    this.products_number = 0;\n    this.setState( { open: props.open });\n  }\n\n  on_submit = async () => {\n    const data = this.make_submition_data();\n    const response = await this.submit( data);\n    if (response.status === 201) return this.on_toggle();\n    this.set_errors( response.body.errors);\n  };\n\n  set_errors( errors) {\n    const vendor_errors = this.get_vendor_errors( \n      this.products_number === 0 ? errors : errors.vendor);\n    const products_errors = this.products_number === 0 ? \n      [] : this.get_products_errors( errors.products);\n    this.setState( { vendor_errors, products_errors }) \n  }\n\n  on_vendor_change = field => event => {\n    const vendor_form = this.state.vendor_form;\n    vendor_form[field] = event.target.value;\n    this.setState( { vendor_form })\n  };\n\n  on_product_change = index => field => event => {\n    console.log( index)\n    const products_forms = this.state.products_forms;\n    products_forms[index][field] = event.target.value;\n    this.setState( { products_forms });\n  };\n\n  on_new_product = () => {\n    const products_forms = this.state.products_forms.concat( \n      [ { ...product_form }]);\n    const products_errors = this.state.products_errors.concat( \n      [ { ...product_errors }]);\n    this.products_number += 1;\n    this.setState( { products_forms, products_errors });\n  };\n\n  render() {\n    return (\n      <Dialog \n        disableBackdropClick \n        open = { this.state.open } \n        onClose = { this.on_toggle }>\n        <DialogTitle>Create New Vendor</DialogTitle>\n        <DialogContent>\n          <form>\n            <TitledVendorForm \n              on_change = { this.on_vendor_change }\n              errors = { this.state.vendor_errors }\n            />\n            <div className = \"products-forms\">\n            { this.state.products_forms.map( (product_form, idx) => (\n              <TitledProductForm \n                index = { idx }\n                key = { idx } \n                on_change = { this.on_product_change( idx) }\n                errors = { this.state.products_errors[idx] } \n              />\n            ))}\n            </div>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick = { this.on_toggle }>\n            Cancel\n          </Button>\n          <Button onClick = { this.on_new_product }>\n            Add Product\n          </Button>\n          <Button onClick = { this.on_submit }>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  get_vendor_errors( errors) {\n    return Object.keys( this.state.vendor_errors).reduce( (acc, key) => ({ \n      [key]: { \n        error: errors.hasOwnProperty( key), \n        message: errors[key] && errors[key][0]\n      }, \n      ...acc \n    }), {});\n  }\n\n  get_products_errors( errors) { \n    return this.state.products_errors.map( (product_errors, idx) => \n      Object.keys( product_errors).reduce( (acc, key) => ({ \n        [key]: { \n          error: errors[idx] && errors[idx].hasOwnProperty( key), \n          message: errors[idx] && errors[idx][key] && errors[idx][key][0]\n        }, \n        ...acc \n      }), {})\n    );\n  }\n\n  make_submition_data() {\n    const vendor = filter_null_and_blanks( this.state.vendor_form);\n    const products = this.state.products_forms.map( \n      product_form => filter_null_and_blanks( product_form)\n    );\n    return {\n      vendor,\n      ...( products.length > 0 && { products })\n    };\n  }\n\n}\n\nexport default CreateDialogView;\n\nconst TitledVendorForm = props => (\n  <>\n    <div><Typography>Vendor</Typography></div>\n    <VendorForm { ...props } />\n  </>\n);\n\nconst TitledProductForm = props => (\n  <>\n    <div><Typography>Product { props.index + 1 }</Typography></div>\n    <ProductForm { ...props } />\n  </>\n);\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst VendorsTable = props => (\n  <TableContainer>\n    <Table stickyHeader aria-label = \"sticky table\">\n      <VendorsTableHead/>\n      <TableBody>\n        <VendorsTableContent { ...props }/>\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n\nconst VendorsTableHead = props => (\n  <TableHead>\n    <TableRow hover>\n      <TableCell padding = \"checkbox\"></TableCell>\n      <TableCell>Company</TableCell>\n      <TableCell align = \"right\">CNPJ</TableCell>\n      <TableCell align = \"right\">City</TableCell>\n    </TableRow>\n  </TableHead>\n);\n\nconst VendorsTableContent = props => (\n  <>\n   { (props.rows_per_page > 0 ? props.vendors_data.slice( \n      props.current_page * props.rows_per_page, \n      (props.current_page + 1) * props.rows_per_page)\n      : props.vendors_data).map( vendor_data => (\n      <TableRow\n        hover \n        key = { vendor_data.id } \n        style = {{ cursor: 'pointer' }}\n        role = \"checkbox\"\n        aria-checked = { props.selected[vendor_data.id] }\n        tabIndex = { -1 }\n        selected = { props.selected[vendor_data.id] }\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked = { props.selected[vendor_data.id] }\n            onClick = { event => props.onCheck( event, vendor_data.id) }\n            inputProps = {{ 'aria-labelledby': vendor_data.id }}\n          />\n        </TableCell>\n        <TableCell \n          onClick = { event => props.onClick( event, vendor_data.id) }\n        >\n          { vendor_data.name }</TableCell>\n        <TableCell align=\"right\" \n          onClick = { event => props.onClick( event, vendor_data.id) }>\n          { vendor_data.cnpj }</TableCell>\n        <TableCell align=\"right\"\n          onClick = { event => props.onClick( event, vendor_data.id) }>\n          { vendor_data.city || \"Not Available\" }</TableCell>\n      </TableRow>\n    ))}\n  </>\n);\n\nexport default VendorsTable; ","\nexport default class Search {\n\n  id_to_terms = {};\n  data = [];\n\n  static set_terms( data) {\n    Search.data = data;\n    Search.id_to_terms = data.reduce( (terms, record) => ({\n      [record.id]: Object.keys( record).reduce( (acc, key) => \n        key !== 'id' && record[key] ? \n          acc.concat( record[key].toString().toLowerCase().split( ' ')) \n          : acc, []),\n      ...terms\n    }), {});\n  }\n\n  static get_ordered_records( phrase) {\n    const words = phrase.toLowerCase().split( ' ');\n    const scores = Object.keys( Search.id_to_terms).reduce( (acc, key) => ({\n      [key]: Search.calculate_score( Search.id_to_terms[key], words),\n      ...acc\n    }), {});\n    return Search.data.sort( (x, y) => scores[y.id] - scores[x.id]);\n  }\n\n  static calculate_score( document_terms, search_terms) {\n    const matches = search_terms.reduce( (acc, term) => \n      document_terms.includes( term) ? acc + 1 : acc\n    , 0);\n    return matches;\n  }\n\n}","const API_BASE = \"http://vendor-product-api.herokuapp.com/api/\"\n//const API_BASE =  \"http://localhost:8000/api/\"\n\nexport const VENDORS_URL = dummy => API_BASE + \"vendors\";\nexport const VENDOR_URL = vendor_id => API_BASE + `vendors/${ vendor_id }`;\nexport const VENDOR_PRODUCTS_URL = vendor_id => API_BASE + `vendors/${ \n  vendor_id }/products`;\nexport const PRODUCTS_URL = dummy => API_BASE + \"products\";\nexport const PRODUCT_URL = product_id => API_BASE + `products/${ product_id }`;\n\nconst create_request = (method, data) => ({\n  method: method,\n  headers: { \n    \"origin\": \"*\"\n  },\n  ...( method !== 'GET' && { body: JSON.stringify( data) })\n});\n\nexport const make_request_on_by_with = (request_name, request_arguments, \n  data = null) => ({\n  url: request_name( request_arguments.id),\n  request: create_request( request_arguments.method, data)\n});\n\nexport const call_api = async ( url, request) => {\n  const response = await fetch( url, request);\n  if (response.status == 204)\n    return {\n      status: 204, body: {}      \n    };\n  return { \n    status: response.status, body: await response.json()\n  };\n};\n\n","import React from 'react';\n\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\n\nimport ControlBarView from './common/ControlBarView';\nimport DeleteDialogView from './common/DeleteDialogView';\nimport ModifyDialogView from './vendors/ModifyDialogView';\nimport CreateDialogView from './vendors/CreateDialogView';\n\nimport VendorsTable from './vendors/table';\n\nimport Search from '../common/search';\nimport * as helper from '../common/request_helpers';  \nimport './VendorsView.scss';\n\nclass VendorsView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    props.set_view_name( \"Vendors View\");\n\n    this.state = {\n      vendors_data: [],\n      selected: {},\n\n      number_selected: 0,\n      current_page: 0,\n      rows_per_page: 10,\n\n      delete_dialog_open: false,\n      create_dialog_open: false,\n      modify_dialog_opne: false\n    };\n  }\n\n  async componentDidMount() {\n    await this.get_vendors();\n  }\n\n  make_vendor = async (vendor_data) => {\n    const response = await this.post_vendor_request( vendor_data);\n    if (response.status !== 201) return response\n    await this.get_vendors();\n    return response;\n  }\n\n  async get_vendors() {\n    const response = await this.get_vendors_request();\n    if (response.status != 200) return;\n    const vendor_data = response.body.data;\n    this.update_state_with( vendor_data);\n    Search.set_terms( this.state.vendors_data);\n  }\n\n  modify_vendor = async (vendor_data, vendor_id) => {\n    const response = await this.put_vendor_request( vendor_data, vendor_id);\n    if (response.status !== 200) return response\n    this.setState( { number_selected: 0 });\n    await this.get_vendors();\n    return response;\n  };\n\n  remove_vendors = async () => {\n    const vendors_id = this.state.vendors_data.reduce( (acc, vendor) => \n      this.state.selected[vendor.id] ? acc.concat( vendor.id) : acc, []);\n    const response = await this.delete_vendors_request( { \n      vendors: vendors_id \n    });\n    if (response.status !== 200) return response;\n    this.clean_vendors( vendors_id);\n    return response;\n  }\n\n  clean_vendors( vendors_id) {\n    const updated_vendors = this.state.vendors_data.filter( vendor => \n      ! vendors_id.includes( vendor.id));\n    this.setState( { number_selected: 0 });\n    this.update_state_with( updated_vendors);\n  }\n\n  on_search = event => {\n    const phrase = event.target.value;\n    if (phrase === null || phrase === \"\") \n      return;\n    this.setState( { vendors_data: Search.get_ordered_records( phrase) });\n  }\n\n  on_row_click = (event, vendor_id) => {\n    this.props.history.push( `/vendors/${ vendor_id }`); \n  }\n\n  on_row_check = (event, vendor_id) => {\n    const selected = { ...this.state.selected, \n      [vendor_id]: ! this.state.selected[vendor_id] };\n    const number_selected = this.state.number_selected + \n      (selected[vendor_id] ? 1 : -1);\n    this.setState( { selected, number_selected });\n  }\n\n  on_page_change = (event, new_page) => {\n    this.setState( { current_page: new_page });\n  }\n\n  on_rows_per_page_change = event => {\n    const rows_per_page = parseInt( event.target.value, 10);\n    this.setState( { current_page: 0, rows_per_page });\n  }\n\n  render() {\n    return (\n      <div>\n        <Paper className = \"table-background\">\n          <TextField\n            className = \"search-bar\"\n            label = 'Search'\n            type = 'string'\n            variant = 'filled'\n            disabled = { this.state.vendors_data.length === 0 }\n            onChange = { this.on_search }\n          />\n          <VendorsTable { ...this.state } onCheck = { this.on_row_check } \n            onClick = { this.on_row_click } \n          />\n          <TablePagination\n            component = \"div\"\n            count = { this.state.vendors_data.length }\n            rowsPerPage = { this.state.rows_per_page }\n            page = { this.state.current_page }\n            onChangePage = { this.on_page_change }\n            onChangeRowsPerPage = { this.on_rows_per_page_change }\n            rowsPerPageOptions = { [10, 25, { label: 'All', value: -1 }] }\n            SelectProps = { {\n              inputProps: { 'aria-label': 'rows per page' },\n              native: true,\n            } }\n          />\n        </Paper>\n        <CreateDialogView \n          on_submit = { this.make_vendor } \n          open = { this.state.create_dialog_open }\n          on_toggle = { this.toggle_create_dialog } \n        />\n        <ModifyDialogView\n          on_submit = { this.modify_vendor } \n          open = { this.state.modify_dialog_open } \n          vendors_data = { this.state.vendors_data }\n          selected = { this.state.selected }\n          on_toggle = { this.toggle_modify_dialog } \n        />\n        <DeleteDialogView\n          on_submit = { this.remove_vendors } \n          number_selected = { this.state.number_selected }\n          open = { this.state.delete_dialog_open } \n          on_toggle = { this.toggle_delete_dialog } \n        />\n        <ControlBarView\n          number_selected = { this.state.number_selected }\n          toggle_delete = { this.toggle_delete_dialog } \n          toggle_create = { this.toggle_create_dialog } \n          toggle_modify = { this.toggle_modify_dialog } \n        />\n      </div>\n    );\n  }\n\n  update_state_with( vendors_data) {\n    const selected = vendors_data.reduce( (acc, vendor_data) => ({ \n      [vendor_data.id]: false, ...acc \n    }), {});\n    Search.set_terms( vendors_data);\n    this.setState( { vendors_data, selected, number_selected: 0 });\n  }\n\n  toggle_create_dialog = () => {\n    this.setState( { create_dialog_open: ! this.state.create_dialog_open });\n  }\n\n  toggle_modify_dialog = () => {\n    this.setState( { modify_dialog_open: ! this.state.modify_dialog_open });\n  }\n\n  toggle_delete_dialog = () => {\n    this.setState( { delete_dialog_open: ! this.state.delete_dialog_open });\n  }\n\n  async get_vendors_request() {\n    const request = helper.make_request_on_by_with( helper.VENDORS_URL, \n      { method: 'GET' });\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async post_vendor_request( vendor_data) {\n    const request = helper.make_request_on_by_with( helper.VENDORS_URL, \n      { method: 'POST' }, vendor_data);\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async put_vendor_request( vendor_data, vendor_id) {\n    const request = helper.make_request_on_by_with( helper.VENDOR_URL, \n      { method: 'PUT', id: vendor_id }, vendor_data);\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async delete_vendors_request( vendors_id) {\n    const request = helper.make_request_on_by_with( helper.VENDORS_URL, \n      { method: 'DELETE' }, vendors_id);\n    return await helper.call_api( request.url, request.request);\n  }\n\n}\n\nexport default VendorsView;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';   \nimport DialogContent from '@material-ui/core/DialogContent'; \nimport DialogActions from '@material-ui/core/DialogActions'; \nimport Dialog from '@material-ui/core/Dialog'; \n\nimport { product_form, product_errors, ProductForm } from '../../common/forms';\nimport { filter_null_and_blanks } from '../../common/general_helpers';\n\nimport './ModifyDialogView.scss';\n\nclass ModifyDialogView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.state = {\n      open: this.props.open,\n      product_form: { ...product_form },\n      product_errors: { ...product_errors },\n      product_id: null\n    };\n    this.on_toggle = props.on_toggle;\n    this.submit = props.on_submit;\n  }\n\n  componentWillReceiveProps( props) {\n    const product_data = props.products_data.filter( product =>\n      props.selected[product.id])[0];\n    const current_product_form = product_data ? this.copy_data_to_form( \n      product_data) : { ...product_form };\n    const product_id = product_data ? product_data.id : null;\n    this.setState( { open: props.open, product_form: current_product_form, \n      product_data, product_id, product_errors: { ...product_errors } });\n  }\n\n  on_submit = async () => {\n    const data = this.make_submition_data();\n    const response = await this.submit( data, this.state.product_id);\n    if (response.status === 200) return this.on_toggle();\n    this.set_errors( response.body.errors);\n  };\n\n  set_errors( errors) {\n    const product_errors = this.get_product_errors( errors);\n    this.setState( { product_errors }) \n  }\n\n  on_product_change = field => event => {\n    const product_form = this.state.product_form;\n    product_form[field] = event.target.value;\n    this.setState( { product_form })\n  };\n\n  render() {\n    if (! this.state.product_data)\n      return (<></>);\n    return (\n      <Dialog \n        disableBackdropClick \n        open = { this.state.open } \n        onClose = { this.on_toggle }>\n        <DialogTitle>\n          Modify { this.state.product_data.name } Product\n        </DialogTitle>\n        <DialogContent>\n          <form>\n            <ProductForm \n              on_change = { this.on_product_change }\n              errors = { this.state.product_errors }\n              default = { this.state.product_data }\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick = { this.on_toggle }>\n            Cancel\n          </Button>\n          <Button onClick = { this.on_submit }>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  get_product_errors( errors) {\n    return Object.keys( this.state.product_errors).reduce( (acc, key) => ({ \n      [key]: { \n        error: errors.hasOwnProperty( key), \n        message: errors[key] && errors[key][0]\n      }, \n      ...acc \n    }), {});\n  }\n\n  make_submition_data() {\n    const product = filter_null_and_blanks( this.state.product_form);\n    return { product };\n  }\n\n  copy_data_to_form( product_data) {\n    const product_form = this.state.product_form;\n    product_form.name = product_data.name;\n    product_form.code = product_data.code;\n    product_form.price = product_data.price;\n    return product_form;\n  }\n  \n}\n\nexport default ModifyDialogView;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';   \nimport DialogContent from '@material-ui/core/DialogContent'; \nimport DialogActions from '@material-ui/core/DialogActions'; \nimport Dialog from '@material-ui/core/Dialog'; \n\nimport { product_form, product_errors, ProductForm } from '../../common/forms';\nimport { filter_null_and_blanks } from '../../common/general_helpers';\n\nimport './CreateDialogView.scss';\nimport { Typography } from '@material-ui/core';\n\nclass CreateDialogView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.state = {\n      open: this.props.open,\n      products_forms: [{ ...product_form }],\n      products_errors: [{ ...product_errors }]\n    };\n    this.products_number = 1;\n    this.on_toggle = props.on_toggle;\n    this.submit = props.on_submit;\n  }\n\n  componentWillReceiveProps( props) {\n    if (props.open) \n      this.setState( { products_errors: [{ ...product_errors }],\n        products_forms: [{ ...product_form }]});\n    this.setState( { open: props.open });\n  }\n\n  on_submit = async () => {\n    const data = this.make_submition_data();\n    const response = await this.submit( data);\n    if (response.status === 201) return this.on_toggle();\n    this.set_errors( response.body.errors);\n  };\n\n  set_errors( errors) {\n    const products_errors = this.get_products_errors( errors.products);\n    this.setState( { products_errors }) \n  }\n\n  on_product_change = index => field => event => {\n    const products_forms = this.state.products_forms;\n    products_forms[index][field] = event.target.value;\n    this.setState( { products_forms });\n  };\n\n  on_new_product = () => {\n    const products_forms = this.state.products_forms.concat( \n      [ { ...product_form }]);\n    const products_errors = this.state.products_errors.concat( \n      [ { ...product_errors }]);\n    this.products_number += 1;\n    this.setState( { products_forms, products_errors });\n  };\n\n  render() {\n    return (\n      <Dialog \n        disableBackdropClick \n        open = { this.state.open } \n        onClose = { this.on_toggle }>\n        <DialogTitle>Create New Products</DialogTitle>\n        <DialogContent>\n          <form>\n            <div className = \"products-forms\">\n            { this.state.products_forms.map( (product_form, idx) => (\n              <ProductsForm \n                index = { idx }\n                key = { idx } \n                on_change = { this.on_product_change( idx) }\n                errors = { this.state.products_errors[idx] } \n              />\n            ))}\n            </div>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick = { this.on_toggle }>\n            Cancel\n          </Button>\n          <Button onClick = { this.on_new_product }>\n            Add Product\n          </Button>\n          <Button onClick = { this.on_submit }>\n            Submit\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n\n  get_products_errors( errors) { \n    return this.state.products_errors.map( (product_errors, idx) => \n      Object.keys( product_errors).reduce( (acc, key) => ({ \n        [key]: { \n          error: errors[idx] && errors[idx].hasOwnProperty( key), \n          message: errors[idx] && errors[idx][key] && errors[idx][key][0]\n        }, \n        ...acc \n      }), {})\n    );\n  }\n\n  make_submition_data() {\n    const products = this.state.products_forms.map( \n      product_form => filter_null_and_blanks( product_form)\n    );\n    return { products };\n  }\n}\n\nexport default CreateDialogView;\n\nconst ProductsForm = props => (\n  <>\n    <div><Typography>Product { props.index + 1 }</Typography></div>\n    <ProductForm { ...props } />\n  </>\n);\n","import React from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst ProductsTable = props => (\n  <TableContainer>\n    <Table stickyHeader aria-label = \"sticky table\">\n      <ProductsTableHead/>\n      <TableBody>\n        <ProductsTableContent { ...props }/>\n      </TableBody>\n    </Table>\n  </TableContainer>\n);\n\nconst ProductsTableHead = props => (\n  <TableHead>\n    <TableRow hover>\n      <TableCell padding = \"checkbox\"></TableCell>\n      <TableCell>Product Name</TableCell>\n      <TableCell align = \"right\">UPC-A Code</TableCell>\n      <TableCell align = \"right\">Price</TableCell>\n    </TableRow>\n  </TableHead>\n);\n\nconst ProductsTableContent = props => (\n  <>\n   { (props.rows_per_page > 0 ? props.products_data.slice( \n      props.current_page * props.rows_per_page, \n      (props.current_page + 1) * props.rows_per_page)\n      : props.products_data).map( product_data => (\n      <TableRow\n        hover \n        key = { product_data.id } \n        role = \"checkbox\"\n        aria-checked = { props.selected[product_data.id] }\n        tabIndex = { -1 }\n        selected = { props.selected[product_data.id] }\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            checked = { props.selected[product_data.id] }\n            onClick = { event => props.onCheck( event, product_data.id) }\n            inputProps = {{ 'aria-labelledby': product_data.id }}\n          />\n        </TableCell>\n        <TableCell>\n          { product_data.name }</TableCell>\n        <TableCell align=\"right\" >\n          { product_data.code }</TableCell>\n        <TableCell align=\"right\" >\n          { product_data.price || \"Not Available\" }</TableCell>\n      </TableRow>\n    ))}\n  </>\n);\n\nexport default ProductsTable;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\n\nimport ControlBarView from './common/ControlBarView';\nimport DeleteDialogView from './common/DeleteDialogView';\nimport ModifyDialogView from './vendor/ModifyDialogView';\nimport CreateDialogView from './vendor/CreateDialogView';\n\nimport ProductsTable from './vendor/table';\n\nimport Search from '../common/search';\nimport * as helper from '../common/request_helpers';  \nimport './VendorView.scss';\n\nclass VendorView extends React.Component {\n\n  constructor( props) {\n    super( props);\n    this.set_view_name = this.props.set_view_name;\n    this.state = {\n      products_data: [],\n      vendor_data: {},\n      selected: {},\n      current_page: 0,\n      number_selected: 0,\n      rows_per_page: 10,\n\n      delete_dialog_open: false,\n      create_dialog_open: false,\n      modify_dialog_open: false\n    };\n  }\n\n  async componentDidMount() {\n    this.vendor_id = this.props.match.params.vendor_id;\n    await this.get_products();\n    await this.get_vendor();\n    this.set_view_name( `${ this.state.vendor_data.name } Products View`);\n  }\n\n  async get_vendor() {\n    const response = await this.get_vendor_request();\n    const vendor_data = response.body.data;\n    this.setState( { vendor_data });\n  }\n\n  async get_products() {\n    const response = await this.get_products_request();\n    if (response.status != 200) return;\n    const products_data = response.body.data;\n    this.update_state_with( products_data);\n    Search.set_terms( this.state.products_data);\n  }\n\n  make_products = async (products_data) => {\n    const response = await this.post_products_request( products_data);\n    if (response.status !== 201) return response\n    await this.get_products();\n    return response;\n  }\n\n  modify_product = async (product_data, product_id) => {\n    const response = await this.put_product_request( \n      product_data, product_id);\n    if (response.status !== 200) return response\n    this.setState( { number_selected: 0 });\n    await this.get_products();\n    return response;\n  };\n\n  remove_products = async () => {\n    const products_id = this.state.products_data.reduce( (acc, product) => \n      this.state.selected[product.id] ? acc.concat( product.id) : acc, []);\n    const response = await this.delete_products_request( { \n      products: products_id \n    });\n    if (response.status !== 200) return response;\n    this.clean_products( products_id);\n    return response;\n  }\n\n  clean_products( products_id) {\n    const updated_products = this.state.products_data.filter( product => \n      ! products_id.includes( product.id));\n    this.setState( { number_selected: 0 });\n    this.update_state_with( updated_products);\n  }\n  \n  on_search = event => {\n    const phrase = event.target.value;\n    if (phrase === null || phrase === \"\") \n      return;\n    this.setState( { products_data: Search.get_ordered_records( phrase) });\n  }\n\n  on_row_check = (event, product_id) => {\n    const selected = { ...this.state.selected, \n      [product_id]: ! this.state.selected[product_id] };\n    const number_selected = this.state.number_selected + \n      (selected[product_id] ? 1 : -1);\n    this.setState( { selected, number_selected });\n  }\n\n  on_page_change = (event, new_page) => {\n    this.setState( { current_page: new_page });\n  }\n\n  on_rows_per_page_change = event => {\n    const rows_per_page = parseInt( event.target.value, 10);\n    this.setState( { current_page: 0, rows_per_page });\n  }\n\n  render() {\n    return (\n      <div>\n        <Paper className = \"table-background\">\n          <TextField\n            className = \"search-bar\"\n            label = 'Search'\n            type = 'string'\n            variant = 'filled'\n            disabled = { this.state.products_data.length === 0 }\n            onChange = { this.on_search }\n          />\n          <ProductsTable { ...this.state } onCheck = { this.on_row_check } \n            onClick = { this.on_row_click }></ProductsTable>\n          <TablePagination\n            component = \"div\"\n            count = { this.state.products_data.length }\n            rowsPerPage = { this.state.rows_per_page }\n            page = { this.state.current_page }\n            onChangePage = { this.on_page_change }\n            onChangeRowsPerPage = { this.on_rows_per_page_change }\n            rowsPerPageOptions = { [10, 25, { label: 'All', value: -1 }] }\n            SelectProps = { {\n              inputProps: { 'aria-label': 'rows per page' },\n              native: true,\n            } }\n          />\n        </Paper>\n        <CreateDialogView\n          on_submit = { this.make_products } \n          open = { this.state.create_dialog_open }\n          on_toggle = { this.toggle_create_dialog } \n        />\n        <ModifyDialogView\n          on_submit = { this.modify_product }\n          open = { this.state.modify_dialog_open }\n          products_data = { this.state.products_data }\n          selected = { this.state.selected }\n          on_toggle = { this.toggle_modify_dialog } \n        />\n        <DeleteDialogView\n          on_submit = { this.remove_products } \n          number_selected = { this.state.number_selected }\n          open = { this.state.delete_dialog_open } \n          on_toggle = { this.toggle_delete_dialog } \n        />\n        <ControlBarView\n          number_selected = { this.state.number_selected }\n          toggle_delete = { this.toggle_delete_dialog } \n          toggle_create = { this.toggle_create_dialog } \n          toggle_modify = { this.toggle_modify_dialog }\n        />\n      </div>\n    );\n  }\n\n  update_state_with( products_data) {\n    const selected = products_data.reduce( (acc, product_data) => ({ \n      [product_data.id]: false, ...acc \n    }), {});\n    Search.set_terms( products_data);\n    this.setState( { products_data, selected, number_selected: 0 });\n  }\n  \n  toggle_create_dialog = () => {\n    this.setState( { create_dialog_open: ! this.state.create_dialog_open });\n  }\n\n  toggle_modify_dialog = () => {\n    this.setState( { modify_dialog_open: ! this.state.modify_dialog_open });\n  }\n\n  toggle_delete_dialog = () => {\n    this.setState( { delete_dialog_open: ! this.state.delete_dialog_open });\n  }\n\n  async get_vendor_request() {\n    const request = helper.make_request_on_by_with( \n      helper.VENDOR_URL, { method: 'GET', id: this.vendor_id });\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async get_products_request() {\n    const request = helper.make_request_on_by_with( \n      helper.VENDOR_PRODUCTS_URL, { method: 'GET', id: this.vendor_id });\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async post_products_request( products_data) {\n    const request = helper.make_request_on_by_with( \n      helper.VENDOR_PRODUCTS_URL, { method: 'POST', id: this.vendor_id },\n      products_data);\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async put_product_request( product_data, product_id) {\n    const request = helper.make_request_on_by_with( \n      helper.PRODUCT_URL, { method: 'PUT', id: product_id },\n      product_data);\n    return await helper.call_api( request.url, request.request);\n  }\n\n  async delete_products_request( products_id) {\n    const request = helper.make_request_on_by_with( \n      helper.PRODUCTS_URL, { method: 'DELETE', id: this.vendor_id },\n      products_id);\n    return await helper.call_api( request.url, request.request);\n  }\n\n}\n\nexport default withRouter( VendorView);\n\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const mui_theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      light: '#6d6d6d',\n      main: '#424242',\n      dark: '#2b2b2b',\n      contrastText: '#f0f0f0',\n    },\n    secondary: {\n      light: '#8e8e8e',\n      main: '#616161',\n      dark: '#373737',\n      contrastText: '#000',\n    },\n  },\n  red : '#ff3232',\n  green : '#5cb65c',\n});","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\n\nimport MenuBarView from './components/common/MenuBarView';\nimport VendorsView from './components/VendorsView';\nimport VendorView from './components/VendorView';\n\nimport { mui_theme } from './styles/themes';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      view_name: \"Vendors View\",\n      backdrop_open: false,\n    }\n  }\n\n  set_view_name = view_name => {\n    this.setState( { view_name })\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme = { mui_theme }>\n        <BrowserRouter>\n          <MenuBarView view_name = { this.state.view_name }/>\n          <div className = \"spacer\"></div>\n          <Switch>\n            <Route exact path = \"/vendors/\" render = { props => \n              <VendorsView { ...props }\n                set_view_name = { this.set_view_name } /> } />\n            <Route exact path = \"/vendors/:vendor_id/\" render = { props => \n              <VendorView\n                set_view_name = { this.set_view_name } /> } />\n            <Redirect to = \"/vendors/\" />\n          </Switch>\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}